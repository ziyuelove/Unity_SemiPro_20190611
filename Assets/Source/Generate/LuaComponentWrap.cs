//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddLuaComponent", AddLuaComponent);
		L.RegFunction("GetSelfLua", GetSelfLua);
		L.RegFunction("Init", Init);
		L.RegFunction("OnTimer", OnTimer);
		L.RegFunction("OnTimerCallback", OnTimerCallback);
		L.RegFunction("StopTimer", StopTimer);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("textasset", get_textasset, set_textasset);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLuaComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.TextAsset>(L, 2))
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				UnityEngine.TextAsset arg1 = (UnityEngine.TextAsset)ToLua.ToObject(L, 2);
				LuaComponent o = LuaComponent.AddLuaComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				string arg1 = ToLua.ToString(L, 2);
				LuaComponent o = LuaComponent.AddLuaComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaComponent.AddLuaComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSelfLua(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			object o = obj.GetSelfLua();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTimer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.OnTimer(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTimerCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.OnTimerCallback();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopTimer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.StopTimer();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textasset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaComponent obj = (LuaComponent)o;
			UnityEngine.TextAsset ret = obj.textasset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textasset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textasset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaComponent obj = (LuaComponent)o;
			UnityEngine.TextAsset arg0 = (UnityEngine.TextAsset)ToLua.CheckObject<UnityEngine.TextAsset>(L, 2);
			obj.textasset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textasset on a nil value");
		}
	}
}

