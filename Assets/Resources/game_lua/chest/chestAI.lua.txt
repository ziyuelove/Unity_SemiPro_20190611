
--角色基础控制逻辑 
chestAI = {}

--这句是重定义元表的索引，就是说有了这句，这个才是一个类。
chestAI.__index = chestAI
chestAI.gameobect = nil


--构造体，构造体的名字是随便起的，习惯性改为New()
function chestAI:New() 
    local self = {};    --初始化self，如果没有这句，那么类所建立的对象改变，其他对象都会改变
    setmetatable(self, chestAI);  --将self的元表设定为Class
    return self;    --返回自身
end

function chestAI:LuaInit(LuaTable)
	self.LuaTable = LuaTable;
end

--开始时调用
function chestAI:Start(gameobject) 
	self.gameObject = gameobject;
	self.Animator = self.gameObject:GetComponent('Animator');
	self.Enabel = true;
	chestmaneger.AddChest(self.gameObject.name,self.LuaTable)
end

function chestAI:Update(gameobject)

end

function chestAI:Open()
	if not self.Enabel then
		return;
	end
	gamectrl.bctrl = false;
	self.Animator:Play("open");
	self.Enabel = false;
	--设置定时器
	self.gameObject:GetComponent('LuaComponent'):OnTimer("OnGive",1);
end

function chestAI:OnGive()
	local id = tonumber(self.gameObject.name);
	local chestdata = chestmaneger.FindChestConfigData(id);
	for key, chestGives in pairs(chestdata.GiveList) do 
		for i=1,chestGives.num do
			itemmaneger.addItem(chestGives.id);
		end
		GetItemPage.Additem(chestGives.id,chestGives.num)
	end
	GetItemPage.StartShow();
	gamectrl.bctrl = true;
end

return chestAI





