--Author : Administrator
--Date   : 2018/11/20

--声明，这里声明了类名还有属性，并且给出了属性的初始值。
BuildInfoPage = {}

--这句是重定义元表的索引，就是说有了这句，这个才是一个类。
BuildInfoPage.__index = BuildInfoPage
BuildInfoPage.gameobect = nil

--构造体，构造体的名字是随便起的，习惯性改为New()
function BuildInfoPage:New() 
    local self = {};    --初始化self，如果没有这句，那么类所建立的对象改变，其他对象都会改变
    setmetatable(self, BuildInfoPage);  --将self的元表设定为Class
    return self;    --返回自身
end

function BuildInfoPage:LuaInit(LuaTable)
	self.LuaTable = LuaTable;
end

--开始时调用
function BuildInfoPage:Start(gameobject) 
	game.OpenPage = true;
	self.gameobect = gameobject;
	self.selectBuild = 0;
	print("打开界面:"..gameobject.name)
	self.gameobect.transform.localScale = Vector3.New(1,1,1);
	self.gameobect.transform.localPosition = Vector3.New(0,0,0);

	local Btn_close = self.gameobect.transform:Find("btn_close");
	self.BuildList = self.gameobect.transform:Find("BuildList/Viewport/Content");
	self.BuildInfo = self.gameobect.transform:Find("buildInfo");

	EventTriggerListener.Get(Btn_close.gameObject).OnClickCall = "OnClose";
	EventTriggerListener.Get(Btn_close.gameObject):OnSetLuaTable(self.LuaTable);

	EventTriggerListener.Get(self.gameobect.transform:Find("buildInfo/btn_Build").gameObject).OnClickCall = "OnCreateBuild";
	EventTriggerListener.Get(self.gameobect.transform:Find("buildInfo/btn_Build").gameObject):OnSetLuaTable(self.LuaTable);

	self:RefreshBuildList();
	return gameobject;
end

function BuildInfoPage:OnClose(gameobject)
	game.OpenPage = false
	UnityEngine.GameObject.Destroy(self.gameobect);
	return gameobject;
end

function BuildInfoPage:OnSelectBuild(gameobject)
	print("选中建筑=======================:"..gameobject.transform.parent.name);
	self.selectBuild = tonumber(gameobject.transform.parent.name);
	self:RefeshBuildInfo()
	return gameobject;
end


function BuildInfoPage.Update()
end

--初始化界面基础显示
function BuildInfoPage.Init()

end

function BuildInfoPage:RefreshBuildList()
	for key, value in pairs(BuildListConfig) do   
		self:InitBuildItem(value);
	end 
end

function BuildInfoPage:InitBuildItem(buildInfo)
	local type = buildInfo.type;
	local ItemRes = ResourceManager.GetInstance():Load("Prefab/UI/BuilInfoUI/buildItem");
	local item = UnityEngine.GameObject.Instantiate(ItemRes);
	item.name = type;

	local spriteImage = ResourceManager.GetInstance():LoadSprite("Texture/buildUI/"..type);
	if spriteImage~=nil then
		item.transform:Find("Button"):GetComponent("Button").image.sprite = spriteImage;
	else
		print("===================:Texture/buildUI/"..type);
	end
	item.transform:Find("Button/Text"):GetComponent("Text").text = buildInfo.name;
	item.transform:SetParent(self.BuildList.transform);
	EventTriggerListener.Get(item.transform:Find("Button").gameObject).OnClickCall = "OnSelectBuild";
	EventTriggerListener.Get(item.transform:Find("Button").gameObject):OnSetLuaTable(self.LuaTable);
end

function BuildInfoPage:RefeshBuildInfo()
	self.BuildInfo.gameObject:SetActive(true);

	local selectBuildInfo = sceneBuildManager.LoadBuildBase(self.selectBuild);
	if selectBuildInfo~=nil then
		local spriteImage = ResourceManager.GetInstance():LoadSprite("Texture/bulid1/"..self.selectBuild);
		if spriteImage~=nil then
			self.BuildInfo.transform:Find("Image"):GetComponent("Image").sprite = spriteImage;
		end
		self.BuildInfo.transform:Find("name"):GetComponent("Text").text = selectBuildInfo.name;
	end

end

function BuildInfoPage:OnCreateBuild()
	local sBuild = sceneBuildManager.CreateBuild(self.selectBuild);
	touchctrl.selectbuild = sBuild;
	game.MainUI:OnOpenEditor();
	self:OnClose(nil)
end



return BuildInfoPage

--endregion
